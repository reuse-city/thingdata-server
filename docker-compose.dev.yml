version: '3.8'

services:
  api:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      - CONFIG_FILE=/app/config/development.yaml
      - ENVIRONMENT=development
      - PYTHONPATH=/app
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    volumes:
      - ./app:/app/app
      - ./config:/app/config
      - ./data:/data
      - ./logs:/logs
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=thingdata
      - POSTGRES_PASSWORD=thingdata
      - POSTGRES_DB=thingdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U thingdata"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  dev-tools:
    build:
      context: .
      dockerfile: Dockerfile.devtools
    volumes:
      - ./app:/app/app
      - ./tests:/app/tests
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=development
    command: tail -f /dev/null

volumes:
  postgres_data:
  minio_data:
